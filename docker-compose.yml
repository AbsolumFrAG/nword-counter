services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: nword-counter-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: nword_counter
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secretpassword}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Discord Bot Application
  bot:
    build: .
    container_name: nword-counter-bot
    restart: unless-stopped
    environment:
      # Discord Configuration
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: nword_counter
      DB_USER: zetsumei
      DB_PASSWORD: ${DB_PASSWORD:-secretpassword}
      DB_SSL: false
      
      # Node Environment
      NODE_ENV: production
    volumes:
      # Mount models directory for persistent model storage
      - ./models:/app/models
      # Mount logs directory
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  bot-network:
    driver: bridge